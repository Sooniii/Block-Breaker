package com.company;

public class easterEgg {
    public static void wejdene() {
        System.out.println("\n" +
                "$$\\    $$\\ $$\\                            $$\\      $$\\                           $$\\                               \n" +
                "$$ |   $$ |\\__|                           $$ | $\\  $$ |                          $$ |                              \n" +
                "$$ |   $$ |$$\\ $$\\    $$\\  $$$$$$\\        $$ |$$$\\ $$ | $$$$$$\\        $$\\  $$$$$$$ | $$$$$$\\  $$$$$$$\\   $$$$$$\\  \n" +
                "\\$$\\  $$  |$$ |\\$$\\  $$  |$$  __$$\\       $$ $$ $$\\$$ |$$  __$$\\       \\__|$$  __$$ |$$  __$$\\ $$  __$$\\ $$  __$$\\ \n" +
                " \\$$\\$$  / $$ | \\$$\\$$  / $$$$$$$$ |      $$$$  _$$$$ |$$$$$$$$ |      $$\\ $$ /  $$ |$$$$$$$$ |$$ |  $$ |$$$$$$$$ |\n" +
                "  \\$$$  /  $$ |  \\$$$  /  $$   ____|      $$$  / \\$$$ |$$   ____|      $$ |$$ |  $$ |$$   ____|$$ |  $$ |$$   ____|\n" +
                "   \\$  /   $$ |   \\$  /   \\$$$$$$$\\       $$  /   \\$$ |\\$$$$$$$\\       $$ |\\$$$$$$$ |\\$$$$$$$\\ $$ |  $$ |\\$$$$$$$\\ \n" +
                "    \\_/    \\__|    \\_/     \\_______|      \\__/     \\__| \\_______|      $$ | \\_______| \\_______|\\__|  \\__| \\_______|\n" +
                "                                                                 $$\\   $$ |                                        \n" +
                "                                                                 \\$$$$$$  |                                        \n" +
                "                                                                  \\______/                                         \n");
        return;
    }

    public static void clement(){
        System.out.println("\n" +
                " ▄▄▄▄▄▄▄▄▄▄▄  ▄            ▄▄▄▄▄▄▄▄▄▄▄  ▄▄       ▄▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄▄        ▄  ▄▄▄▄▄▄▄▄▄▄▄       ▄          ▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄▄        ▄ \n" +
                "▐░░░░░░░░░░░▌▐░▌          ▐░░░░░░░░░░░▌▐░░▌     ▐░░▌▐░░░░░░░░░░░▌▐░░▌      ▐░▌▐░░░░░░░░░░░▌     ▐░▌        ▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░▌      ▐░▌\n" +
                "▐░█▀▀▀▀▀▀▀▀▀ ▐░▌          ▐░█▀▀▀▀▀▀▀▀▀ ▐░▌░▌   ▐░▐░▌▐░█▀▀▀▀▀▀▀▀▀ ▐░▌░▌     ▐░▌ ▀▀▀▀█░█▀▀▀▀       ▐░▌       ▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀█░▌▀▀▀▀█░█▀▀▀▀ ▐░▌░▌     ▐░▌\n" +
                "▐░▌          ▐░▌          ▐░▌          ▐░▌▐░▌ ▐░▌▐░▌▐░▌          ▐░▌▐░▌    ▐░▌     ▐░▌            ▐░▌      ▐░▌       ▐░▌▐░▌       ▐░▌▐░▌       ▐░▌    ▐░▌     ▐░▌▐░▌    ▐░▌\n" +
                "▐░▌          ▐░▌          ▐░█▄▄▄▄▄▄▄▄▄ ▐░▌ ▐░▐░▌ ▐░▌▐░█▄▄▄▄▄▄▄▄▄ ▐░▌ ▐░▌   ▐░▌     ▐░▌             ▐░▌     ▐░█▄▄▄▄▄▄▄█░▌▐░▌       ▐░▌▐░█▄▄▄▄▄▄▄█░▌    ▐░▌     ▐░▌ ▐░▌   ▐░▌\n" +
                "▐░▌          ▐░▌          ▐░░░░░░░░░░░▌▐░▌  ▐░▌  ▐░▌▐░░░░░░░░░░░▌▐░▌  ▐░▌  ▐░▌     ▐░▌             ▐░▌     ▐░░░░░░░░░░░▌▐░▌       ▐░▌▐░░░░░░░░░░▌     ▐░▌     ▐░▌  ▐░▌  ▐░▌\n" +
                "▐░▌          ▐░▌          ▐░█▀▀▀▀▀▀▀▀▀ ▐░▌   ▀   ▐░▌▐░█▀▀▀▀▀▀▀▀▀ ▐░▌   ▐░▌ ▐░▌     ▐░▌             ▐░▌     ▐░█▀▀▀▀█░█▀▀ ▐░▌       ▐░▌▐░█▀▀▀▀▀▀▀█░▌    ▐░▌     ▐░▌   ▐░▌ ▐░▌\n" +
                "▐░▌          ▐░▌          ▐░▌          ▐░▌       ▐░▌▐░▌          ▐░▌    ▐░▌▐░▌     ▐░▌            ▐░▌      ▐░▌     ▐░▌  ▐░▌       ▐░▌▐░▌       ▐░▌    ▐░▌     ▐░▌    ▐░▌▐░▌\n" +
                "▐░█▄▄▄▄▄▄▄▄▄ ▐░█▄▄▄▄▄▄▄▄▄ ▐░█▄▄▄▄▄▄▄▄▄ ▐░▌       ▐░▌▐░█▄▄▄▄▄▄▄▄▄ ▐░▌     ▐░▐░▌     ▐░▌           ▐░▌       ▐░▌      ▐░▌ ▐░█▄▄▄▄▄▄▄█░▌▐░█▄▄▄▄▄▄▄█░▌▄▄▄▄█░█▄▄▄▄ ▐░▌     ▐░▐░▌\n" +
                "▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░▌       ▐░▌▐░░░░░░░░░░░▌▐░▌      ▐░░▌     ▐░▌          ▐░▌        ▐░▌       ▐░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░▌      ▐░░▌\n" +
                " ▀▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀▀  ▀         ▀  ▀▀▀▀▀▀▀▀▀▀▀  ▀        ▀▀       ▀            ▀          ▀         ▀  ▀▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀▀  ▀        ▀▀ \n" +
                "                                                                                                                                                                           \n");
     return;
    }

    public static void fortnite() throws InterruptedException {
        for(int i = 0; i<3; i++) {
            System.out.println("⠀⠀⠀⣶⣿⣶\n" +
                    "⠀⠀⠀⣿⣿⣿⣀\n" +
                    "⠀⣀⣿⣿⣿⣿⣿⣿\n" +
                    "⣶⣿⠛⣭⣿⣿⣿⣿\n" +
                    "⠛⠛⠛⣿⣿⣿⣿⠿\n" +
                    "⠀⠀⠀⠀⣿⣿⣿\n" +
                    "⠀⠀⣀⣭⣿⣿⣿⣿⣀\n" +
                    "⠀⠤⣿⣿⣿⣿⣿⣿⠉\n" +
                    "⠀⣿⣿⣿⣿⣿⣿⠉\n" +
                    "⣿⣿⣿⣿⣿⣿\n" +
                    "⣿⣿⣶⣿⣿\n" +
                    "⠉⠛⣿⣿⣶⣤\n" +
                    "⠀⠀⠉⠿⣿⣿⣤\n" +
                    "⠀⠀⣀⣤⣿⣿⣿\n" +
                    "⠀⠒⠿⠛⠉⠿⣿\n" +
                    "⠀⠀⠀⠀⠀⣀⣿⣿\n" +
                    "⠀⠀⠀⠀⣶⠿⠿⠛");
            Thread.sleep(200);
            System.out.println("⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣤\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿\n" +
                    "⠀⠀⣶⠀⠀⣀⣤⣶⣤⣉⣿⣿⣤⣀\n" +
                    "⠤⣤⣿⣤⣿⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣀\n" +
                    "⠀⠛⠿⠀⠀⠀⠀⠉⣿⣿⣿⣿⣿⠉⠛⠿⣿⣤\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠿⣿⣿⣿⠛⠀⠀⠀⣶⠿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿⣿⣿⣿⣤⠀⣿⠿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⣶⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠿⣿⣿⣿⣿⣿⠿⠉⠉\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⣿⣿⠿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠉\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⣛⣿⣭⣶⣀\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠉⠛⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⣿⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣉⠀⣶⠿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⣶⣿⠿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠛⠿⠛");
            Thread.sleep(200);
            System.out.println("⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣶\n" +
                    "⠀⠀⠀⠀⠀⣀⣀⠀⣶⣿⣿⠶\n" +
                    "⣶⣿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣤⣤\n" +
                    "⠀⠉⠶⣶⣀⣿⣿⣿⣿⣿⣿⣿⠿⣿⣤⣀\n" +
                    "⠀⠀⠀⣿⣿⠿⠉⣿⣿⣿⣿⣭⠀⠶⠿⠿\n" +
                    "⠀⠀⠛⠛⠿⠀⠀⣿⣿⣿⣉⠿⣿⠶\n" +
                    "⠀⠀⠀⠀⠀⣤⣶⣿⣿⣿⣿⣿\n" +
                    "⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⠒\n" +
                    "⠀⠀⠀⠀⣀⣿⣿⣿⣿⣿⣿⣿\n" +
                    "⠀⠀⠀⠀⠀⣿⣿⣿⠛⣭⣭⠉\n" +
                    "⠀⠀⠀⠀⠀⣿⣿⣭⣤⣿⠛\n" +
                    "⠀⠀⠀⠀⠀⠛⠿⣿⣿⣿⣭\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⣿⣿⠉⠛⠿⣶⣤\n" +
                    "⠀⠀⠀⠀⠀⠀⣀⣿⠀⠀⣶⣶⠿⠿⠿\n" +
                    "⠀⠀⠀⠀⠀⠀⣿⠛\n" +
                    "⠀⠀⠀⠀⠀⠀⣭⣶");
            Thread.sleep(200);
            System.out.println("⠀⠀⠀⠀⠀⠀⣶⣿⣶\n" +
                    "⠀⠀⠀⣤⣤⣤⣿⣿⣿\n" +
                    "⠀⠀⣶⣿⣿⣿⣿⣿⣿⣿⣶\n" +
                    "⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                    "⠀⠀⣿⣉⣿⣿⣿⣿⣉⠉⣿⣶\n" +
                    "⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⠿⣿\n" +
                    "⠀⣤⣿⣿⣿⣿⣿⣿⣿⠿⠀⣿⣶\n" +
                    "⣤⣿⠿⣿⣿⣿⣿⣿⠿⠀⠀⣿⣿⣤\n" +
                    "⠉⠉⠀⣿⣿⣿⣿⣿⠀⠀⠒⠛⠿⠿⠿\n" +
                    "⠀⠀⠀⠉⣿⣿⣿⠀⠀⠀⠀⠀⠀⠉\n" +
                    "⠀⠀⠀⣿⣿⣿⣿⣿⣶\n" +
                    "⠀⠀⠀⠀⣿⠉⠿⣿⣿\n" +
                    "⠀⠀⠀⠀⣿⣤⠀⠛⣿⣿\n" +
                    "⠀⠀⠀⠀⣶⣿⠀⠀⠀⣿⣶\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣭⣿⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⣤⣿⣿⠉");
            Thread.sleep(200);
            System.out.println("⠀⠀⠀⠀⣀\n" +
                    "⠀⠀⣶⣿⠿⠀⠀⠀⣀⠀⣤⣤\n" +
                    "⠀⣶⣿⠀⠀⠀⠀⣿⣿⣿⠛⠛⠿⣤⣀\n" +
                    "⣶⣿⣤⣤⣤⣤⣤⣿⣿⣿⣀⣤⣶⣭⣿⣶⣀\n" +
                    "⠉⠉⠉⠛⠛⠿⣿⣿⣿⣿⣿⣿⣿⠛⠛⠿⠿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⠿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠿⣿⣿⣿⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⣭⣿⣿⣿⣿⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⣤⣿⣿⣿⣿⣿⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⠿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⠿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⣿⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⣿⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⣿⠛⠿⣿⣤\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿⠀⠀⠀⣿⣿⣤\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⠀⣶⣿⠛⠉\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⣤⣿⣿⠀⠀⠉\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉");
            Thread.sleep(200);
            System.out.println("⠀⠀⠀⠀⠀⠀⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                    "⠀⠀⠀⠀⠀⠀⣿⣿⣿⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣤⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠉⣿⣿⣿⣶⣿⣿⣿⣶⣶⣤⣶⣶⠶⠛⠉⠉\n" +
                    "⠀⠀⠀⠀⠀⠀⣤⣿⠿⣿⣿⣿⣿⣿⠀⠀⠉⠀⠀⠀⠀⠀⠀\n" +
                    "⠛⣿⣤⣤⣀⣤⠿⠉⠀⠉⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                    "⠀⠉⠉⠉⠉⠉⠀⠀⠀⠀⠉⣿⣿⣿⣀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⠛⠀⠀⠀⠀⠀⠀⠀\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣛⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⣶⣿⣿⠛⠿⣿⣿⣿⣶⣤⠀⠀⠀⠀⠀⠀\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⣿⠛⠉⠀⠀⠀⠛⠿⣿⣿⣶⣀⠀⠀⠀⠀\n" +
                    "⠀⠀⠀⠀⠀⠀⣿⣀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⣶⣤⠀⠀\n" +
                    "⠀⠀⠀⠀⠀⠛⠿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿⣿⠿⠀\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⠉⠉⠀");
            Thread.sleep(200);
            System.out.println("⠀⠀⣀\n" +
                    "⠀⠿⣿⣿⣀\n" +
                    "⠀⠉⣿⣿⣀\n" +
                    "⠀⠀⠛⣿⣭⣀⣀⣤\n" +
                    "⠀⠀⣿⣿⣿⣿⣿⠛⠿⣶⣀\n" +
                    "⠀⣿⣿⣿⣿⣿⣿⠀⠀⠀⣉⣶\n" +
                    "⠀⠀⠉⣿⣿⣿⣿⣀⠀⠀⣿⠉\n" +
                    "⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿\n" +
                    "⠀⣀⣿⣿⣿⣿⣿⣿⣿⣿⠿\n" +
                    "⠀⣿⣿⣿⠿⠉⣿⣿⣿⣿\n" +
                    "⠀⣿⣿⠿⠀⠀⣿⣿⣿⣿\n" +
                    "⣶⣿⣿⠀⠀⠀⠀⣿⣿⣿\n" +
                    "⠛⣿⣿⣀⠀⠀⠀⣿⣿⣿⣿⣶⣀\n" +
                    "⠀⣿⣿⠉⠀⠀⠀⠉⠉⠉⠛⠛⠿⣿⣶\n" +
                    "⠀⠀⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣿\n" +
                    "⠀⠀⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉\n" +
                    "⣀⣶⣿⠛");
            Thread.sleep(200);
            System.out.println("⠀⠀⠀⠀⠀⠀⠀⠀⣤⣿⣿⠶⠀⠀⣀⣀\n" +
                    "⠀⠀⠀⠀⠀⠀⣀⣀⣤⣤⣶⣿⣿⣿⣿⣿⣿\n" +
                    "⠀⠀⣀⣶⣤⣤⠿⠶⠿⠿⠿⣿⣿⣿⣉⣿⣿\n" +
                    "⠿⣉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠛⣤⣿⣿⣿⣀\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⣿⣿⣶⣤\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣿⣿⣿⣿⠿⣛⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠛⣿⣿⣿⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⣿⣿⠿⠀⣿⣿⣿⠛\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠀⠀⣿⣿⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⠿⣿⠀⠀⣿⣶\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠛⠀⠀⣿⣿⣶\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⣿⣿⠤\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠿⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣀\n" +
                    "⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⣿");
            Thread.sleep(200);
            System.out.println("⠀⠀⠀⣀⣶⣀\n" +
                    "⠀⠀⠀⠒⣛⣭\n" +
                    "⠀⠀⠀⣀⠿⣿⣶\n" +
                    "⠀⣤⣿⠤⣭⣿⣿\n" +
                    "⣤⣿⣿⣿⠛⣿⣿⠀⣀\n" +
                    "⠀⣀⠤⣿⣿⣶⣤⣒⣛\n" +
                    "⠉⠀⣀⣿⣿⣿⣿⣭⠉\n" +
                    "⠀⠀⣭⣿⣿⠿⠿⣿\n" +
                    "⠀⣶⣿⣿⠛⠀⣿⣿\n" +
                    "⣤⣿⣿⠉⠤⣿⣿⠿\n" +
                    "⣿⣿⠛⠀⠿⣿⣿\n" +
                    "⣿⣿⣤⠀⣿⣿⠿\n" +
                    "⠀⣿⣿⣶⠀⣿⣿⣶\n" +
                    "⠀⠀⠛⣿⠀⠿⣿⣿\n" +
                    "⠀⠀⠀⣉⣿⠀⣿⣿\n" +
                    "⠀⠶⣶⠿⠛⠀⠉⣿\n" +
                    "⠀⠀⠀⠀⠀⠀⣀⣿\n" +
                    "⠀⠀⠀⠀⠀⣶⣿⠿");
            Thread.sleep(100);
        }
        return;
    }
}